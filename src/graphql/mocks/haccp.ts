import type {
  HaccpDashboardPayload,
  HaccpControlPoint,
  HaccpLogEntry,
  NcBoardItem,
  ControlPointSetting,
} from "../types";

export const haccpDashboardMock: HaccpDashboardPayload = {
  compliance: 92,
  openNonConformities: 4,
  offlineSensors: 2,
  upcomingControls: [
    {
      id: "control-1",
      point: "Cold room A",
      threshold: "0 – 4 °C",
      due: "14:45",
    },
    {
      id: "control-2",
      point: "Dishwasher outlet",
      threshold: "> 65 °C",
      due: "15:15",
    },
    {
      id: "control-3",
      point: "Delivery dock",
      threshold: "< 8 °C",
      due: "16:00",
    },
  ],
  alerts: [
    {
      id: "alert-1",
      type: "nc",
      title: "Temperature deviation",
      description: "Cold room B recorded 9.4 °C for 20 minutes.",
      time: "10 minutes ago",
    },
    {
      id: "alert-2",
      type: "sensor",
      title: "Sensor offline",
      description: "Probe #42 stopped reporting in the last 15 minutes.",
      time: "32 minutes ago",
    },
  ],
};

export const haccpControlPointsMock: HaccpControlPoint[] = [
  {
    id: "cp-1",
    label: "Cold room A",
    threshold: "0 – 4 °C",
    min: 0,
    max: 4,
    unit: "°C",
    mode: "manual",
  },
  {
    id: "cp-2",
    label: "Dishwasher outlet",
    threshold: "> 65 °C",
    min: 65,
    max: 100,
    unit: "°C",
    mode: "manual",
  },
  {
    id: "cp-3",
    label: "Delivery dock",
    threshold: "< 8 °C",
    min: -5,
    max: 8,
    unit: "°C",
    mode: "iot",
  },
];

export const haccpLogEntriesMock: HaccpLogEntry[] = [
  {
    id: "log-1",
    pointId: "cp-1",
    pointLabel: "Cold room A",
    value: 3.2,
    unit: "°C",
    timestamp: "2024-05-04T07:45:00Z",
    operator: "Marie L.",
    mode: "manual",
    status: "ok",
  },
  {
    id: "log-2",
    pointId: "cp-2",
    pointLabel: "Dishwasher outlet",
    value: 61.5,
    unit: "°C",
    timestamp: "2024-05-04T08:15:00Z",
    operator: "IoT sensor #12",
    mode: "iot",
    status: "nc",
  },
  {
    id: "log-3",
    pointId: "cp-3",
    pointLabel: "Delivery dock",
    value: 6.4,
    unit: "°C",
    timestamp: "2024-05-04T09:00:00Z",
    operator: "IoT sensor #42",
    mode: "iot",
    status: "ok",
  },
  {
    id: "log-4",
    pointId: "cp-1",
    pointLabel: "Cold room A",
    value: 4.8,
    unit: "°C",
    timestamp: "2024-05-04T10:30:00Z",
    operator: "Paul R.",
    mode: "manual",
    status: "nc",
  },
];

export const haccpNcBoardMock: NcBoardItem[] = [
  {
    id: "nc-1",
    title: "Cold chain deviation",
    type: "Temperature",
    severity: "high",
    cause: "Door left open",
    due: "2024-05-05",
    assignee: "Paul R.",
    actionsCount: 2,
    pointId: "cp-1",
    status: "todo",
  },
  {
    id: "nc-2",
    title: "Cleaning checklist missing",
    type: "Documentation",
    severity: "medium",
    cause: "Staff absence",
    due: "2024-05-06",
    assignee: "Marie L.",
    actionsCount: 1,
    pointId: "cp-1",
    status: "inProgress",
  },
  {
    id: "nc-3",
    title: "Receiving dock temperature",
    type: "Temperature",
    severity: "medium",
    cause: "Sensor drift",
    due: "2024-05-04",
    assignee: "IoT team",
    actionsCount: 3,
    pointId: "cp-3",
    status: "review",
  },
  {
    id: "nc-4",
    title: "Allergen trace",
    type: "Allergen",
    severity: "high",
    cause: "Supplier change",
    due: "2024-05-03",
    assignee: "Quality team",
    actionsCount: 5,
    pointId: "cp-2",
    status: "closed",
  },
];

export const controlPointSettingsMock: ControlPointSetting[] = [
  {
    id: "cp-1",
    name: "Cold room A",
    type: "cold_room",
    min: 0,
    max: 4,
    frequency: 120,
  },
  {
    id: "cp-2",
    name: "Delivery dock",
    type: "delivery",
    min: -5,
    max: 8,
    frequency: 60,
  },
  {
    id: "cp-3",
    name: "Hot holding line",
    type: "hot_hold",
    min: 63,
    max: 85,
    frequency: 45,
  },
];
